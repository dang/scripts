snippet for "for int loop (fori)" !b
for (${4:int} ${2:i} = 0; $2 < ${1:count}; ${3:++$2}) {
	${0:/* code */}
}
endsnippet

snippet wh "While loop" !b
while (${1:condition}) {
	${2:/* code */}
}
endsnippet

snippet if "if .. (if)" !
if (${1:/* condition */}) {
	${2:/* code */}
}$0
endsnippet

snippet el "else..." !
else {
	$1
}$0
endsnippet

snippet switch "Switch statement" !b
switch (${1:condition}) {
$0
}
endsnippet

snippet case "Case statement" !b
case ${1:value}:
	${2:/* code */}
	break;
endsnippet

snippet st "struct" !b
struct ${1:`!p snip.rv = (snip.basename or "name") + "_t"`} {
	${0:/* data */}
};
endsnippet

snippet fun "Function" !b
${1:void}
${2:function_name}(${3:args})
{
	${0:/* code */}
}
endsnippet

snippet ret "Return statement" !b
return (${1:status});
endsnippet

snippet ifdef "#ifdef expansion" !b
#ifdef ${1:SYMBOL}
#endif /* $1 */
endsnippet

snippet once "Include header once only guard" !b
#ifndef ${1:`!p
if not snip.c:
	import random, string
	name = re.sub(r'[^A-Za-z0-9]+','_', snip.fn).upper()
	rand = ''.join(random.sample(string.ascii_letters+string.digits, 8))
	snip.rv = ('%s_%s' % (name,rand)).upper()
else:
    snip.rv = snip.c`}
#define $1
/**
 * @file
 * @brief ${2:brief}
 */

${0}

#endif /* $1 */

endsnippet

snippet t "Tertiary contitional a ? b : c" !b
${1:condition} ? ${2:a} : ${3:b}
endsnippet

