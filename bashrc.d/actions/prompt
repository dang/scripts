# vim: ft=sh:
# Set the shell prompts to nice color settings

if [ "${USER}" = "root" ]; then
   	PCHAR="#"
else
	PCHAR=">"
fi

is_docker() {
	grep -q docker /proc/self/cgroup
	return $?
}

# Set prompt path to max 2 levels for best compromise of readability and usefulness
promptpath () {
    realpwd=$(readlink -f "$PWD")
    realhome=$(readlink -f "$HOME")

    # if we are in the home directory
    if echo $realpwd | grep -q "^$realhome"; then
        path=$(echo $realpwd | sed "s|^$realhome|\~|")
        if [ "$path" = "~" ] || [ "$(dirname "$path")" = "~" ]; then
            echo $path
        else
            echo $(basename "$(dirname "$path")")/$(basename "$path")
        fi
        return
    fi

    path_dir=$(dirname "$PWD")
    # if our parent dir is a top-level directory, don't mangle it
    if [ $(dirname "$path_dir") = "/" ]; then
        echo $PWD
    else
        path_parent=$(basename "$path_dir")
        path_base=$(basename "$PWD")

        echo $path_parent/$path_base
    fi
}

# For systems without color:
#PS1="[ $BOXNAME] "`tput bold`'${PWD##*/}'`tput sgr0`" > "

# Colors:
export NC='\033[0m'
export BLACK='\033[0;30m'
export RED='\033[0;31m'
export GREEN='\033[0;32m'
export ORANGE='\033[0;33m'
export BLUE='\033[0;34m'
export PURPLE='\033[0;35m'
export CYAN='\033[0;36m'
export LIGHTGRAY='\033[0;37m'
export DARKGRAY='\033[1;30m'
export LIGHTRED='\033[1;31m'
export LIGHTGREEN='\033[1;32m'
export YELLOW='\033[1;33m'
export LIGHTBLUE='\033[1;34m'
export LIGHTPURPLE='\033[1;35m'
export LIGHTCYAN='\033[1;36m'
export WHITE='\033[1;37m'
# 	30 - grey
# 	31 - red
# 	32 - green
# 	33 - yellow
# 	34 - blue
# 	35 - purple
# 	36 - cyan
# 	37 - white
if [ -z "${COLOR1}" ]; then
	if is_docker ; then
		# Make docker distinct
		COLOR1="${LIGHTPURPLE}"
		COLOR2="${WHITE}"
	else
		# Default colors are blue/red
		COLOR1="${LIGHTBLUE}"
		COLOR2="${LIGHTRED}"
	fi
fi
PCOLOR1="\[${COLOR1}\]"
PCOLOR2="\[${COLOR2}\]"
PCOLORN="\[${NC}\]"
#PS1="${PCOLOR1}[${PCOLOR2}\$(date +%H%M)${PCOLOR1}][\h] ${PCOLOR2}\w${PCOLORN}${PCHAR} "
#PS1='\e[1;${COLOR1}m[\A \h] \e[1;${COLOR2}m\W\e[0m${PCHAR} '
#PS1='[${COLOR1};1m[\A \h] [${COLOR2};1m\W[0m${PCHAR} '
#PS1='\[\033[${COLOR1};1m\][\A \h] \[\033[${COLOR2};1m\]\W\[\033[0m\]${PCHAR} '
#PS1='\[\033[01;${COLOR1}m\][\A \h]\[\033[01;${COLOR2}m\] \W\[\033[00m\]${PCHAR} '
#PS1='\[\033[01;${COLOR1}m\]\D{%H:%M%S} \h\[\033[01;${COLOR2}m\] \W \[\033[00m\]${PCHAR} '

# Note: Don't indent these.  It screws up the prompt
if [ -z "${PHOSTNAME}" ]; then
PS1="${PCOLOR1}[${PCOLOR1}\A${PCOLOR1}\
${PCOLOR1} ${PCOLOR1}\h${PCOLOR1}]\
${PCOLOR2} \$(promptpath)\
${PCOLORN}${PCHAR}${PCOLORN} "
else
PS1="${PCOLOR1}[${PCOLOR1}\A${PCOLOR1}\
${PCOLOR1} ${PCOLOR1}${PHOSTNAME}${PCOLOR1}]\
${PCOLOR2} \$(promptpath)\
${PCOLORN}${PCHAR}${PCOLORN} "
fi

