#!/bin/bash
#
# Recursively make tags file for all c, cpp, C, c++, h files
#

USAGE="[-hk] [<directories>]"
LONGUSAGE="\t-h\tPrint this help message
\t-k\tKernel database (no system includes)
\t<directories>\tDirectories to scan (defaults to '.')"

source ${HOME}/bin/scripts/functions.sh

while getopts ":hk" option; do
	case ${option} in
		k ) KERNEL="-k";;
		h ) usage;;
		\? ) usage "Invalid argument ${OPTARG}";;
		* ) usage "Invalid argument ${option}";;
	esac
done

# Store how we got here, so vim can re-run the same arguments
echo "$0 $@" > ".#maketags.dfg"

# Get stuff from the .maketagsrc file
if [ -f "${HOME}/.maketagsrc" ]; then
	source ${HOME}/.maketagsrc
fi

if [ "${OPTIND}" != "0" ]; then
	shift $((OPTIND-1))
fi

if [ -z "$1" ]; then
	DIRS="."
else
	DIRS="$@"
fi

if [ -n "${KERNEL}" ]; then
	echo "Making kernel tags for $DIRS"
else
	echo "Making tags for $DIRS"
fi

NAMES="-name *.c -or -name *.cpp -or -name *.cxx -or -name *.h++ -or -name *.hxx -or -name *.hh -or -name *.H -or -name *.C -or -name *.c++ -or -name *.cc -or -name *.h"

if [ -n "${SKIPRE}" ]; then
	echo "true"
	find ${DIRS} ${NAMES} | egrep -v "${SKIPRE}" > cscope.files
else
	echo "false"
	find ${DIRS} ${NAMES} > cscope.files
fi
cscope -q -L ${KERNEL} -i cscope.files
exuberant-ctags -L- < cscope.files
